{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth-module/auth-module.module.ts","webpack:///src/app/auth-module/login/login.component.html","webpack:///src/app/auth-module/login/login.component.ts","webpack:///src/app/auth-module/register/register.component.html","webpack:///src/app/auth-module/register/register.component.ts","webpack:///src/app/auth-module/services/auth.service.ts","webpack:///src/app/auth-module/token.interceptor.ts","webpack:///src/app/components/bike-station-info/bike-station-info.component.html","webpack:///src/app/components/bike-station-info/bike-station-info.component.ts","webpack:///src/app/components/dialog/dialog.component.html","webpack:///src/app/components/dialog/dialog.component.ts","webpack:///src/app/components/errordialog/errordialog.component.html","webpack:///src/app/components/errordialog/errordialog.component.ts","webpack:///src/app/components/loaading-near-stations/loaading-near-stations.component.html","webpack:///src/app/components/loaading-near-stations/loaading-near-stations.component.ts","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/components/nomadriddialog/nomadriddialog.component.html","webpack:///src/app/components/nomadriddialog/nomadriddialog.component.ts","webpack:///src/app/components/tabledetail/services/tabledetail.service.ts","webpack:///src/app/components/tabledetail/tabledetail.component.html","webpack:///src/app/components/tabledetail/tabledetail.component.ts","webpack:///src/app/components/welcome-dialog/welcome-dialog.component.html","webpack:///src/app/components/welcome-dialog/welcome-dialog.component.ts","webpack:///src/app/components/welcome/welcome.component.html","webpack:///src/app/components/welcome/welcome.component.ts","webpack:///src/app/info-card/adress-finder/adress-finder.component.html","webpack:///src/app/info-card/adress-finder/adress-finder.component.ts","webpack:///src/app/info-card/closestations/closestations.component.html","webpack:///src/app/info-card/closestations/closestations.component.ts","webpack:///src/app/info-card/info-card.module.ts","webpack:///src/app/info-card/info-card/info-card.component.html","webpack:///src/app/info-card/info-card/info-card.component.ts","webpack:///src/app/info-card/services/info-card.service.ts","webpack:///src/app/legend/bikes-legend/bikes-legend.component.html","webpack:///src/app/legend/bikes-legend/bikes-legend.component.ts","webpack:///src/app/legend/buses-legend/buses-legend.component.html","webpack:///src/app/legend/buses-legend/buses-legend.component.ts","webpack:///src/app/legend/legend.module.ts","webpack:///src/app/legend/legend/legend.component.html","webpack:///src/app/legend/legend/legend.component.ts","webpack:///src/app/material-module.ts","webpack:///src/app/services/bike-accident.service.ts","webpack:///src/app/services/bikes-layer.service.ts","webpack:///src/app/services/buses.service.ts","webpack:///src/app/services/districts.service.ts","webpack:///src/app/services/map.service.ts","webpack:///src/app/services/routes.service.ts","webpack:///src/app/services/streets.service.ts","webpack:///src/app/services/style.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/upper-bar/services/upper-bar.service.ts","webpack:///src/app/upper-bar/upper-bar.module.ts","webpack:///src/app/upper-bar/upper-bar/upper-bar.component.html","webpack:///src/app/upper-bar/upper-bar/upper-bar.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","AppComponent","authService","title","doLogin","AppModule","AuthModuleModule","LoginComponent","upperBarService","loginOrRegister","createForm","loginForm","loginParams","get","value","doLoginUser","RegisterComponent","registerForm","passwordMatch","registerParams","registerUser","AuthService","httpClient","REST_API_SERVER","emtTokenOut","emtToken$","asObservable","subscribe","res","token","undefined","notifyToken","err","console","log","params","email","password","name","surname","next","TokenInterceptor","isRefreshing","refreshTokenSubject","request","localStorage","getItem","addToken","handle","pipe","error","status","clone","setHeaders","BikeStationInfoComponent","DialogComponent","dialogRef","bikesService","disableClose","bikes$","bikes","closeDialog","close","ErrordialogComponent","data","bikesLayerService","setError","mapquesturlSplitted","url","split","notifyBikes","LoaadingNearStationsComponent","marker","polygon","mapLeaflet","userCity","legend","maxBounds","MapComponent","mapService","userService","districtsService","busesService","bikeAccidents","dialog","renderMap","openLoading","event","open","width","afterClosed","result","NomadriddialogComponent","styleService","format","fakeAddress","sendUserPositionToInfoCard","fakeAddressSplt","lng","lat","sessionStorage","setItem","String","fakeAddressCoords","userPositionCoords","readFeature","dataProjection","featureProjection","getGeometry","getCoordinates","userPositionFeature","geometry","applyStyleToUser","userPositionCollection","push","userPositionLayer","source","features","map$","addLayer","updateMapViewCenter","TabledetailService","selectedStationIdOut","selectedStationId$","selectedStationId","TabledetailComponent","infoCardService","routeService","tabledetailService","displayedColumns","notifyClosestsStations$","closetsStations","closetsStation","dataSource","select","pointsList","coordinates","substring","indexOf","length","setViewPoint","notifySelectedStationId","stationId","getRoute","address","WelcomeDialogComponent","WelcomeComponent","router","navigate","AdressFinderComponent","streetsService","iconRegistry","sanitizer","addressFinderControl","streetsList","Array","foundAddressCollection","filteredStreets","valueChanges","_filterAdress","addSvgIcon","bypassSecurityTrustResourceUrl","createAddressFinderForm","streetsList$","addressFinderForm","addressToFind","filterValue","resultF","filter","street","wholeAddress","toLowerCase","includes","option","matches","match","streetWithOutNumber","index","trim","addressSplitted","cleanStreet","getAdressCoordinates","foundAddressCoords","results","locations","latLng","formatCoords","formatCoordsSplitted","foundAddressCoordsFormatted","replace","foundAddressFeature","applyStyleToFoundAdressMarker","foundAddressLayer","ClosestationsComponent","errorNumberResults","nearestBikeStations","userPosition","sendUserPositionToInfoCard$","positionCompositionForm","re","RegExp","test","parseFloat","getClosestsStations","openTableDetail","reset","notifyClosestStations","InfoCardModule","InfoCardComponent","streets","zoomButtontext","createAddressForm","sendDevice$","mobile","myForm","firstName","zoomTo","globalPosition","myIcon","L","icon","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","options","iconUrl","sendFoundAdressIconToMap","clickable","draggable","InfoCardService","closetsStationsListOut","iconOut","zoomToOut","sendFoundAdressIconToMap$","zoomTo$","errorMessage","ErrorEvent","message","window","alert","post","handleError","BikesLegendComponent","bikesOrSlots","checked","disabled","bikeOrDot","createBikeStationsFeatures","BusesLegendComponent","notifyBuses$","busStops","LegendModule","LegendComponent","showInLegend","uopenLogin$","MaterialModule","BikeAccidentService","bikeAccidentsCollection","getBikeAccidents","createHeatMap","BikesLayerService","bikesOut","bikeStationsCollection","selectedBikeStationCollection","bikeStations","getBikeStations","addSelected","response","bikeOrSlot","forEach","bikeStation","splitCoords","bikeStationCoords","bikeStationFeature","setId","setProperties","availableBikes","freeDocks","applyStyleToMarker","bikeStationsLayer","i","getLayers","getArray","getProperties","removeLayer","bikesLoaded","removeSelectedBikeStation","selectedFeature","getSource","getFeatureById","selectedFeatureCoords","applyStyleToSelectedFeature","selectedbikeStationLayer","BusesService","busesListOut","getBusStopsAroundUser","notifyBuses","DistrictsService","districtsFeaturesCollection","alreadyDistricts","getDistricts","createDistrictsFeatures","totalBikes","districtsArrayCoords","districtsArrayInfo","pair","geom","coordsDistrictArray","districtObj","j","coordsPair","districtName","coorsTranform","map","coordinate","feature","applyStyleToDistricts","districtsLayer","plots_styles","fill","color","text","textAlign","font","textBaseline","scale","offsetX","offsetY","stroke","setStyle","MapService","layers","viewCoordinates","userPositionOut","deviceOut","device","key","imagerySet","view","center","zoom","maxZoom","interactions","altShiftDragRotate","pinchRotate","target","document","getElementById","controls","setView","RoutesService","selectedBikeStationAddress","StreetsService","streetsListOut","getStreets","notifyStreets","StyleService","assets_base","markerStyle","less2Slots","image","anchor","anchorXUnits","anchorYUnits","opacity","src","snapToPixel","slotSymbol","more2Slots","less2Bikes","more2Bikes","getFeatures","values_","availableSlots","noBikes","zIndex","lessThan50Bikes","moreThan50Bikes","markerStyleSelectedFeature","UserService","userPosition$","getUserPosition","http","notifyUserPosition","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","locationObj","adminArea5","providedLocation","formatCoords2","UpperBarService","openLoginOut","openLogin","UpperBarModule","UpperBarComponent","environment","production"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {MapComponent} from './components/map/map.component'\r\nimport {WelcomeComponent} from './components/welcome/welcome.component'\r\nconst routes: Routes = [\r\n  {path:'map', component:MapComponent},{path:'welcome', component:WelcomeComponent},\r\n{ path: '',\r\n    redirectTo: '/welcome',\r\n    pathMatch: 'full'\r\n    } ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { AuthService } from './auth-module/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'madrid-mobility-front';\r\n\r\n  constructor(private authService: AuthService){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.doLogin();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MaterialModule } from './material-module';\r\nimport{BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {TableModule} from 'primeng/table';\r\n//import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { DialogComponent } from './components/dialog/dialog.component';\r\nimport { LoaadingNearStationsComponent } from './components/loaading-near-stations/loaading-near-stations.component';\r\nimport { WelcomeDialogComponent } from './components/welcome-dialog/welcome-dialog.component';\r\nimport { NomadriddialogComponent } from './components/nomadriddialog/nomadriddialog.component';\r\nimport { ErrordialogComponent } from './components/errordialog/errordialog.component';\r\nimport { BikeStationInfoComponent } from './components/bike-station-info/bike-station-info.component';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { TabledetailComponent  } from './components/tabledetail/tabledetail.component';\r\nimport { InfoCardModule } from './info-card/info-card.module';\r\nimport { LegendModule } from './legend/legend.module';\r\nimport { UpperBarModule } from './upper-bar/upper-bar.module';\r\n\r\nimport { TokenInterceptor } from './auth-module/token.interceptor';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent,\r\n    DialogComponent,\r\n    LoaadingNearStationsComponent,\r\n    WelcomeDialogComponent,\r\n    NomadriddialogComponent,\r\n    ErrordialogComponent,\r\n    BikeStationInfoComponent,\r\n    WelcomeComponent,\r\n    TabledetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    TableModule,\r\n    //MatProgressSpinnerModule,\r\n    InfoCardModule,\r\n    LegendModule,\r\n    UpperBarModule\r\n  ],\r\n  entryComponents: [\r\n    DialogComponent,LoaadingNearStationsComponent,WelcomeDialogComponent,\r\n    NomadriddialogComponent,ErrordialogComponent,BikeStationInfoComponent,\r\n    TabledetailComponent\r\n  ],\r\n  providers: [\r\n     MapComponent,\r\n     {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },],\r\n  bootstrap: [AppComponent],\r\n  \r\n})\r\nexport class AppModule { }\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { MaterialModule } from '../material-module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent],\n  imports: [\n    CommonModule, MaterialModule,ReactiveFormsModule\n  ],\n  exports:[\n    LoginComponent,RegisterComponent\n  ]\n})\nexport class AuthModuleModule { }\n","<div *ngIf=\"loginOrRegister\">\n  <div>\n    <div [formGroup]=\"loginForm\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Login</mat-label>\n        <input matInput formControlName=\"email\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\">\n      </mat-form-field>\n    </div>\n  </div>\n  <a role=\"button\" (click)=\"showRegister()\">Haven´t an account yet?</a>\n  <div style=\"width: 25%;\">\n    <button mat-raised-button color=\"primary\" (click)=\"login()\">Login </button><br>\n  </div>\n</div>\n<div *ngIf=\"!loginOrRegister\">\n  <app-register></app-register>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { UpperBarService } from 'src/app/upper-bar/services/upper-bar.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginOrRegister: boolean = true;\n\n  constructor(private authService: AuthService, private upperBarService: UpperBarService) { }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(),\n      'password': new FormControl(),\n    });\n  }\n\n  login(){\n    let loginParams = {\n      'email':this.loginForm.get('email').value,\n      'password':this.loginForm.get('password').value\n    }\n\n    \n    this.authService.doLoginUser(loginParams)\n  }\n\n  showRegister(){\n    this.loginOrRegister = false;\n  }\n}\n","<div>\n    <div [formGroup]=\"registerForm\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Surname</mat-label>\n        <input matInput formControlName=\"surname\" type=\"text\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" type=\"text\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Confirm Password</mat-label>\n        <input matInput formControlName=\"password2\" type=\"password\">\n      </mat-form-field>\n    </div>\n  </div>\n  <div style=\"width: 25%;\">\n    <button mat-raised-button color=\"primary\" (click)=\"register()\">Create account </button><br>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.registerForm = new FormGroup({\n      'name': new FormControl(),\n      'surname': new FormControl(),\n      'email': new FormControl(),\n      'password': new FormControl(),\n      'password2': new FormControl(),\n    });\n  }\n\n  register(){\n    if(this.passwordMatch()){\n\n      let registerParams = {\n        'name': this.registerForm.get('name').value,\n        'surname': this.registerForm.get('surname').value,\n        'email': this.registerForm.get('email').value,\n        'password': this.registerForm.get('password').value\n      }\n      this.authService.registerUser(registerParams);\n    }else{\n\n    }\n  }\n\n  passwordMatch(){\n    if(this.registerForm.get('password').value === this.registerForm.get('password2').value){\n      return true;\n    }else{\n      return false;\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  //private REST_API_SERVER = \"http://localhost:8081/api/auth/EMTServices/\";\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/auth/EMTServices/\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  private emtTokenOut = new BehaviorSubject<string>(null);\n\n  emtToken$ = this.emtTokenOut.asObservable();\n\n  doLogin(){\n    this.httpClient.get(this.REST_API_SERVER+'login').subscribe(\n      res=>{\n      //@ts-ignore\n      if(res.token != null && res.token != undefined){\n        //@ts-ignore\n        this.notifyToken(res.token)\n      }\n    },\n    err =>{\n      console.log(err)\n    });\n  }\n\n  doLoginUser(loginParams){\n    this.httpClient.get('http://localhost:8081/api/EMTServices/loginUser', {\n      params: {\n        'email': loginParams.email,\n        'password': loginParams.password\n      }\n    }).subscribe(\n      res=>{\n      console.log(res)\n    },\n    err =>{\n      console.log(err)\n    });\n  }\n\n  registerUser(registerParams){\n    this.httpClient.get('http://localhost:8081/api/EMTServices/registerUser', {\n      params: {\n        'name':registerParams.name,\n        'surname':registerParams.surname,\n        'email': registerParams.email,\n        'password': registerParams.password\n      }\n    }).subscribe(\n      res=>{\n      console.log(res)\n    },\n    err =>{\n      console.log(err)\n    });\n  }\n\n  notifyToken(token: string){\n    this.emtTokenOut.next(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\n//import { AuthService } from './services/auth.service';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  \r\n\r\n  //constructor(public authService: AuthService) { }\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let token=localStorage.getItem('JWT_TOKEN');\r\n    // if (this.authService.getJwtToken()) {\r\n       request = this.addToken(request, token);\r\n    // }\r\n\r\n    return next.handle(request).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && error.status === 401) {\r\n        //return this.handle401Error(request, next);\r\n      } else {\r\n        console.log(error)\r\n        return throwError(error);\r\n      }\r\n    }));\r\n  }\r\n\r\n   private addToken(request: HttpRequest<any>, token: string) {\r\n     return request.clone({\r\n       setHeaders: {\r\n         'Authorization': `Bearer ${token}`\r\n       }\r\n     });\r\n   }\r\n}","<p>bike-station-info works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bike-station-info',\n  templateUrl: './bike-station-info.component.html',\n  styleUrls: ['./bike-station-info.component.css']\n})\nexport class BikeStationInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center;\">\r\n    <mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n    <span style=\"display: inline-block;\">Loading bike stations</span>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n     private bikesService: BikesLayerService\r\n    ) {\r\n      dialogRef.disableClose = true;\r\n      this.bikesService.bikes$.subscribe(bikes=>{\r\n        if(bikes != null){\r\n          this.closeDialog();\r\n        }\r\n      })\r\n     }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h3>{{error}}</h3>\n<button mat-raised-button color=\"primary\"  [mat-dialog-close] (click)=\"notify()\">Close</button>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\nimport { DialogData } from '../nomadriddialog/nomadriddialog.component';\n\n@Component({\n  selector: 'app-errordialog',\n  templateUrl: './errordialog.component.html',\n  styleUrls: ['./errordialog.component.css']\n})\nexport class ErrordialogComponent implements OnInit {\n\n  error: string\n\n  constructor(public dialogRef: MatDialogRef<ErrordialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, private bikesLayerService:BikesLayerService) { }\n\n  ngOnInit(): void {\n    this.setError();\n  }\n\n  setError(){\n    console.log(this.data)\n    //@ts-ignore\n    let mapquesturlSplitted = this.data.err.url.split('/')[2];\n    console.log(mapquesturlSplitted)\n    \n    //@ts-ignore\n    if(mapquesturlSplitted === 'www.mapquestapi.com'){\n      this.error = 'An error has occurred retrieving your location, please, try again in a few seconds'\n    }\n    \n  }\n\n  notify(){\n    this.bikesLayerService.notifyBikes(true);\n  }\n\n}\n","<!-- <mat-spinner></mat-spinner>  -->\r\n<span>Calculating near stations</span>","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-loaading-near-stations',\r\n  templateUrl: './loaading-near-stations.component.html',\r\n  styleUrls: ['./loaading-near-stations.component.css']\r\n})\r\nexport class LoaadingNearStationsComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoaadingNearStationsComponent>,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  \r\n  <div #mapElement id=\"map\" class=\"map\"\r\n  style=\"border: none; position: absolute; top: 0; left: 0; right: 0; bottom: 0; height: 100%; width: 100%;\"\r\n  (click)=\"selectOnMap($event)\" (mousewheel)=\"detectZoomChange()\">\r\n  <app-upper-bar></app-upper-bar>\r\n  <app-legend></app-legend>\r\n    <app-info-card></app-info-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit, Inject, ViewChild, AfterContentInit, HostListener } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n//import { MatExpansionPanel } from '@angular/material/expansion'\r\n//import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\nimport { LoaadingNearStationsComponent } from '../loaading-near-stations/loaading-near-stations.component';\r\n\r\nimport { NomadriddialogComponent } from '../nomadriddialog/nomadriddialog.component';\r\nimport { ErrordialogComponent } from '../errordialog/errordialog.component';\r\nimport { TabledetailComponent } from '../tabledetail/tabledetail.component'\r\nimport { BikeAccidentService } from '../../services/bike-accident.service'\r\nimport { InfoCardService } from '../../info-card/services/info-card.service';\r\nimport { MapService } from '../../services/map.service';\r\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DistrictsService } from 'src/app/services/districts.service';\r\nimport { BusesService } from 'src/app/services/buses.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\ndeclare let L;\r\nvar marker;\r\nvar polygon;\r\nlet mapLeaflet;\r\n//var globalLatlng\r\nvar polygon\r\nvar userCity;\r\nvar legend\r\nlet maxBounds = [[[-3.8094818592, 40.3347849588], [-3.5842621326, 40.3347849588], [-3.5842621326, 40.51042249], [-3.8094818592, 40.51042249], [-3.8094818592, 40.3347849588]]]\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  constructor(private mapService: MapService, \r\n    private bikesLayerService: BikesLayerService, \r\n    private userService:UserService, \r\n    private districtsService: DistrictsService, \r\n    private busesService: BusesService,\r\n    private bikeAccidents: BikeAccidentService,\r\n    public dialog: MatDialog){\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapService.renderMap();\r\n    this.openLoading();\r\n  }\r\n\r\n  detectZoomChange(){\r\n\r\n  }\r\n\r\n  selectOnMap(event){\r\n    \r\n  }\r\n\r\n  openLoading() {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '600px',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result)\r\n       });\r\n  }\r\n}\r\n","<h2>It seems that you are not located in Madrid</h2>\n<h3>To have a try to this app, choose any address to be used as your current position</h3>\n<mat-form-field>\n    <mat-label>Addresses</mat-label>\n    <mat-select>\n      <mat-option value=\"Calle Lope de Vega 8\" (click)=\"setFakeUserPosition('-3.69837 40.41379')\">\n        Calle Lope de Vega 9\n      </mat-option>\n      <mat-option value=\"Calle Palma 40\"(click)=\"setFakeUserPosition('-3.70524 40.42652')\" [mat-dialog-close]>\n        Calle Palma 40\n      </mat-option>\n    </mat-select>\n  </mat-form-field>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MapService } from 'src/app/services/map.service';\n\nimport WKT from 'ol/format/WKT';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport { Vector as VectorSource } from 'ol/source';\nimport VectorLayer from 'ol/layer/Vector';\nimport { StyleService } from 'src/app/services/style.service';\nimport Collection from 'ol/Collection';\n\nexport interface DialogData {\n  fakeAddress: string;\n}\n\n@Component({\n  selector: 'app-nomadriddialog',\n  templateUrl: './nomadriddialog.component.html',\n  styleUrls: ['./nomadriddialog.component.css']\n})\nexport class NomadriddialogComponent implements OnInit {\n  value: any;\n  format = new WKT();\n  constructor(\n    public dialogRef: MatDialogRef<NomadriddialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, private mapService: MapService, private styleService: StyleService) { }\n\n  ngOnInit(): void {\n  }\n\n  setFakeUserPosition(fakeAddress) {\n\n    this.mapService.sendUserPositionToInfoCard(fakeAddress);\n\n    let fakeAddressSplt =fakeAddress.split(' ');\n    let lng =fakeAddressSplt[0];\n    let lat =fakeAddressSplt[1];\n\n    sessionStorage.setItem('userLat', String(lat));\n    sessionStorage.setItem('userLng', String(lng));\n\n    let fakeAddressCoords = 'POINT(' + fakeAddress + ')';\n\n    let userPositionCoords = this.format.readFeature(fakeAddressCoords, { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates()\n\n    let userPositionFeature = new Feature({\n      geometry: new Point(userPositionCoords)\n    });\n\n    this.styleService.applyStyleToUser(userPositionFeature);\n\n    let userPositionCollection = new Collection;\n\n    userPositionCollection.push(userPositionFeature);\n\n    let userPositionLayer = new VectorLayer({\n      name: 'userPosition',\n      source: new VectorSource({\n        features: userPositionCollection\n      })\n    });\n\n    this.mapService.map$.addLayer(userPositionLayer);\n    this.mapService.updateMapViewCenter(fakeAddressCoords);\n    this.dialogRef.close(fakeAddress);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabledetailService {\n\n  private selectedStationIdOut = new BehaviorSubject<any>(null);\n  selectedStationId$ = this.selectedStationIdOut.asObservable();\n\n  notifySelectedStationId(selectedStationId){\n    this.selectedStationIdOut.next(selectedStationId);\n  }\n\n  constructor() { }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" >\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"address\">\n    <th mat-header-cell *matHeaderCellDef> Address </th>\n    <td mat-cell *matCellDef=\"let element\" role=\"button\" (click)=\"findNearStations(element)\"> {{element.address}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\" role=\"button\" (click)=\"findNearStations(element)\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"availableBikes\">\n    <th mat-header-cell *matHeaderCellDef> Available bikes </th>\n    <td mat-cell *matCellDef=\"let element\" role=\"button\" (click)=\"findNearStations(element)\"> {{element.availableBikes}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"freeDocks\">\n    <th mat-header-cell *matHeaderCellDef> Free docks </th>\n    <td mat-cell *matCellDef=\"let element\" role=\"button\" (click)=\"findNearStations(element)\"> {{element.freeDocks}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"distance\">\n    <th mat-header-cell *matHeaderCellDef> Distance (mts) </th>\n    <td mat-cell *matCellDef=\"let element\" role=\"button\" (click)=\"findNearStations(element)\"> {{element.distance}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MapService } from 'src/app/services/map.service';\nimport { RoutesService } from 'src/app/services/routes.service';\nimport { InfoCardService } from '../../info-card/services/info-card.service';\nimport { TabledetailService } from './services/tabledetail.service';\n\n@Component({\n  selector: 'app-tabledetail',\n  templateUrl: './tabledetail.component.html',\n  styleUrls: ['./tabledetail.component.css']\n})\nexport class TabledetailComponent implements OnInit {\n  displayedColumns: string[] = ['address', 'name', 'availableBikes', 'freeDocks','distance'];\n  selectedStation: any;\n  closetsStation: any;\n  dataSource;\n  constructor(private infoCardService: InfoCardService,\n     private mapService : MapService, \n    private routeService: RoutesService,\n    public dialogRef: MatDialogRef<TabledetailComponent>,\n    private tabledetailService:TabledetailService) { }\n\n  ngOnInit(): void {\n    this.infoCardService.notifyClosestsStations$.subscribe(closetsStations => {\n      if (closetsStations != null) {\n         this.closetsStation = closetsStations;\n         this.dataSource = closetsStations;\n      }\n    });\n  }\n  async findNearStations(select: any) {\n    let lat = select.pointsList.coordinates.substring(0, select.pointsList.coordinates.indexOf(\" \"));\n    let lng = select.pointsList.coordinates.substring(select.pointsList.coordinates.indexOf(\" \") + 1, select.pointsList.coordinates.length);\n    let setViewPoint = 'POINT(' + lat + ' ' + lng+ ')';\n    this.tabledetailService.notifySelectedStationId(select.stationId);\n    this.routeService.getRoute(select.address);\n    this.closeDialog();\n    this.mapService.updateMapViewCenter(setViewPoint);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  getBackToMap() {\n    //this.mapAccordeon.open()\n  }\n}\n","<div>\n    <h4>Welcome to Madrid Mobility</h4>\n    <span>This is an app that provides transport information from EMTLab API</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-dialog',\n  templateUrl: './welcome-dialog.component.html',\n  styleUrls: ['./welcome-dialog.component.css']\n})\nexport class WelcomeDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"container\">\n    <h1>Welcome to Madrid Mobility</h1>\n    <h3>This app has been developed in order to provide data from the <a href=\"https://mobilitylabs.emtmadrid.es/\">EMT\n            API-REST service</a></h3>\n    <h3>and show it a map, using some GIS functions.</h3>\n\n    <h3>Before continue, I have to tell you that the town where you are located is registered just for statistical\n        reasons,\n        and please, if you agree, allow geolocation in your browser when required.</h3>\n    <div id=\"button\">\n        <button mat-raised-button color=\"primary\" (click)=\"navigateToMadridMobility()\">Carry on</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\nnavigateToMadridMobility(){\n  this.router.navigate(['map']);\n}\n}\n","<div *ngIf=\"streetsList.length >0\" style=\"margin-left: 5%;\">\n    <div >Address finder</div>\n    <mat-icon svgIcon=\"thumbs-up\" aria-hidden=\"false\" aria-label=\"Example thumbs up SVG icon\" matTooltip=\"Type and address. Ex: calle limón \"></mat-icon>\n    <div >\n        <form class=\"example-form\" [formGroup]=\"addressFinderForm\" style=\"display: table-cell;\">\n            <mat-form-field style=\"width: 300px;\">\n              <input type=\"text\" placeholder=\"Find address\" aria-label=\"Number\" matInput [formGroup]=\"addressFinderForm\"\n                [formControl]=\"addressFinderControl\" [matAutocomplete]=\"auto\" formControlName=\"addressToFind\" panelWidth=5>\n              <mat-autocomplete lass=\"autocompletable\" #auto=\"matAutocomplete\" (optionSelected)=\"onChangeStreet($event)\">\n                <mat-option *ngFor=\"let street of filteredStreets | async\" [value]=\"street.wholeAddress\">\n                  {{street.wholeAddress}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n          </form>\n    </div>\n</div>\n\n<div *ngIf=\"streetsList.length < 1\"  style=\"margin-left: 5%;\">\n  <div >Address finder</div>\n    <p>Address finder is temporarily disabled</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { StreetsService } from 'src/app/services/streets.service';\nimport { InfoCardService } from '../services/info-card.service';\n\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport { Vector as VectorSource } from 'ol/source';\nimport VectorLayer from 'ol/layer/Vector';\nimport Collection from 'ol/Collection';\nimport WKT from 'ol/format/WKT';\nimport { StyleService } from 'src/app/services/style.service';\nimport { MapService } from 'src/app/services/map.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-adress-finder',\n  templateUrl: './adress-finder.component.html',\n  styleUrls: ['./adress-finder.component.css']\n})\nexport class AdressFinderComponent implements OnInit {\n\n  addressFinderForm: FormGroup;\n  addressFinderControl = new FormControl();\n  filteredStreets: Observable<String[]>\n  streetsList: any[] = new Array;\n  format = new WKT();\n  foundAddressCollection = new Collection;\n\n  constructor(private streetsService: StreetsService,\n    private infoCardService: InfoCardService,\n    private styleService: StyleService,\n    private mapService: MapService,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer) {\n      \n    this.filteredStreets = this.addressFinderControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterAdress(value))\n\n      );\n\n      iconRegistry.addSvgIcon(\n        'thumbs-up',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/img/iconmonstr-plus-3.svg'));\n  }\n\n  ngOnInit(): void {\n\n    this.createAddressFinderForm();\n\n    this.streetsService.streetsList$.subscribe(data => {\n      if (data != null) {\n        this.streetsList = data;\n      }\n    })\n  }\n\n  createAddressFinderForm() {\n    this.addressFinderForm = new FormGroup({\n      addressToFind: new FormControl()\n    });\n  }\n\n  _filterAdress(value: string): any[] {\n    const filterValue = value;\n    let resultF: any[];\n    if (filterValue.length > 8) {\n      if (this.streetsList) {\n        resultF = this.streetsList.filter(street => {\n          if (street.wholeAddress != null) {\n            return street.wholeAddress.toLowerCase().includes(filterValue);\n          } else {\n            return false;\n          }\n        })\n      } else {\n        return null;\n      }\n    }\n    return resultF;\n  }\n\n  onChangeStreet(event: any) {\n    let address = event.option.value;\n    var matches = address.match(/(\\d+)/);\n    let streetWithOutNumber = address.substring(0, matches.index).trim() + '+';\n    let addressSplitted = address.split(\" \");\n    streetWithOutNumber += addressSplitted[0]\n    let cleanStreet = streetWithOutNumber.substring(streetWithOutNumber.indexOf(' '), streetWithOutNumber.length)\n    address = matches[0] + ',' + cleanStreet + ',madrid,spain';\n\n    //replace *****with you api key\n    this.infoCardService.getAdressCoordinates(address).subscribe(\n      data => {\n        //@ts-ignore\n        let foundAddressCoords = data.results[0].locations[0].latLng;\n\n        let formatCoords = 'POINT(' + foundAddressCoords.lng + ' ' + foundAddressCoords.lat + \" 216.7\" + ')';\n\n        let formatCoordsSplitted = formatCoords.split(' ');\n\n        let setViewPoint = formatCoordsSplitted[0] + ' ' + formatCoordsSplitted[1]+ ')';\n\n        let foundAddressCoordsFormatted = this.format.readFeature(formatCoords.replace(\n          /[\\W]*\\S+[\\W]*$/, '') + ')', { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates();\n\n        let foundAddressFeature = new Feature({\n          geometry: new Point(foundAddressCoordsFormatted)\n        });\n\n        this.styleService.applyStyleToFoundAdressMarker(foundAddressFeature);\n        this.foundAddressCollection.push(foundAddressFeature);\n\n        let foundAddressLayer = new VectorLayer({\n          name: 'foundAddress',\n          source: new VectorSource({\n            features: this.foundAddressCollection\n          })\n        })\n\n        this.mapService.map$.addLayer(foundAddressLayer);\n        \n        this.mapService.updateMapViewCenter(setViewPoint);\n      }\n    );\n  }\n\n}\n","<div style=\"width: 25%;\">\n  <mat-icon svgIcon=\"thumbs-up\" aria-hidden=\"false\" aria-label=\"Example thumbs up SVG icon\" matTooltip=\"Type a a number and find the nearest bike stations\"></mat-icon>\n  <div [formGroup]=\"positionCompositionForm\" >\n    <mat-form-field appearance=\"outline\">\n    <mat-label>Number of bike stations to be shown</mat-label>\n    <input matInput formControlName=\"numberOfResults\">\n    </mat-form-field>\n  </div>\n</div>\n<div style=\"width: 25%;\">\n  <button mat-raised-button color=\"primary\" (click)=\"getClosestStation()\" >Get nearests bike stations </button><br>\n</div>\n<p *ngIf=\"errorNumberResults\">Please, type an integer from 1 to 9</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TabledetailComponent } from 'src/app/components/tabledetail/tabledetail.component';\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\nimport { MapService } from 'src/app/services/map.service';\nimport { UserService } from 'src/app/services/user.service';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { InfoCardService } from '../services/info-card.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-closestations',\n  templateUrl: './closestations.component.html',\n  styleUrls: ['./closestations.component.css']\n})\nexport class ClosestationsComponent implements OnInit {\n\n  positionCompositionForm: FormGroup;\n  errorNumberResults = false;\n  nearestBikeStations: any = new Array;\n  userPosition = { 'lat': null, 'lng': null };\n\n  constructor(private bikesLayerService: BikesLayerService,\n    private infoCardService: InfoCardService,\n    private mapService: MapService,\n    public dialog: MatDialog,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer) { \n      \n    }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.mapService.sendUserPositionToInfoCard$.subscribe(data => {\n      if (data != null) {\n        if (typeof (data) === 'object') {\n          //@ts-ignore\n          this.userPosition.lat = data.lat;\n          //@ts-ignore\n          this.userPosition.lng = data.lng;\n        } else {\n          let fakeAddressSplt = String(data).split(' ');\n          //@ts-ignore\n          this.userPosition.lat = fakeAddressSplt[1];\n          //@ts-ignore\n          this.userPosition.lng = fakeAddressSplt[0];\n        }\n      }\n    })\n  }\n\n  createForm() {\n    this.positionCompositionForm = new FormGroup({\n      'numberOfResults': new FormControl(),\n    });\n  }\n\n  getClosestStation() {\n    var re = new RegExp(\"^[1-9]\\d*$\");\n    if (this.positionCompositionForm.get('numberOfResults').value != null && re.test(this.positionCompositionForm.get('numberOfResults').value)) {\n      this.errorNumberResults = false;\n\n      let params = {\n        'numberOfResults': parseFloat(this.positionCompositionForm.get('numberOfResults').value),\n        //@ts-ignore\n        'coordinates': 'POINT (' + this.userPosition.lng + ' ' + this.userPosition.lat + '),3857)'\n      }\n      this.bikesLayerService.getClosestsStations(params).subscribe(\n        data => {\n          this.nearestBikeStations = data;\n          this.openTableDetail();\n          if (this.nearestBikeStations.length > 0) {\n            this.positionCompositionForm.get('numberOfResults').reset();\n          } else {\n\n          }\n        }\n      );\n\n\n    } else {\n      this.errorNumberResults = true;\n    }\n  }\n\n  openTableDetail() {\n    this.infoCardService.notifyClosestStations(this.nearestBikeStations);\n    const dialogRef = this.dialog.open(TabledetailComponent, {\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material-module';\nimport { ClosestationsComponent } from './closestations/closestations.component';\nimport { AdressFinderComponent } from './adress-finder/adress-finder.component';\n\n\n@NgModule({\n  declarations: [InfoCardComponent, ClosestationsComponent, AdressFinderComponent],\n  imports: [\n    CommonModule,ReactiveFormsModule, MaterialModule\n  ],\n  exports:[InfoCardComponent]\n})\nexport class InfoCardModule { }\n","  <div class=\"info-card container\">\n    <div class=\"row\">\n      <div class=\"col-sm\">\n        <app-closestations></app-closestations>\n      </div>\n      <div class=\"col-sm\">\n        <app-adress-finder></app-adress-finder>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { InfoCardService } from '../services/info-card.service';\n\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MapService } from '../../services/map.service';\n\ndeclare let L;\n\n@Component({\n  selector: 'app-info-card',\n  templateUrl: './info-card.component.html',\n  styleUrls: ['./info-card.component.css']\n})\nexport class InfoCardComponent implements OnInit {\n\n  streets: any = new Array;\n  myForm: FormGroup;\n  errorNumberResults = false;\n  zoomButtontext: String = 'Zoom to my position';\n  userPosition;\n  mobile: boolean;\n\n  constructor(private infoCardService: InfoCardService,\n    private mapService: MapService) {\n  }\n\n  ngOnInit(): void {\n\n    this.createAddressForm();\n\n    this.mapService.sendUserPositionToInfoCard$.subscribe(userPosition => {\n      this.userPosition = userPosition;\n    });\n\n    this.mapService.sendDevice$.subscribe(mobile => {\n      console.log(mobile)\n      this.mobile = mobile;\n    });\n  }\n\n  createAddressForm() {\n    this.myForm = new FormGroup({\n      firstName: new FormControl()\n    });\n  }\n\n\n  zoomTo() {\n\n\n    if (this.zoomButtontext === 'Zoom to my position') {\n      this.zoomButtontext = 'Zoom global'\n      //@ts-ignore\n      let userPosition ={\n        'position':this.userPosition,\n        'option': 'userPosition'\n      }\n      this.infoCardService.zoomTo(userPosition);\n    } else {\n      this.zoomButtontext = 'Zoom to my position'\n      let globalPosition ={\n        'position': [40.4167754,-3.7037902],\n        'option':'global'\n      }\n      this.infoCardService.zoomTo(globalPosition);\n      //mapLeaflet.setView([40.4167754, -3.7037902], 13);\n    }\n  }\n\n  _filterAdress(value: string): any[] {\n    const filterValue = value;\n    let resultF: any[];\n    if (filterValue.length > 8) {\n      if (this.streets) {\n        resultF = this.streets.filter(street => {\n          if (street.wholeAddress != null) {\n            return street.wholeAddress.toLowerCase().includes(filterValue);\n          } else {\n            return false;\n          }\n        })\n      } else {\n        return null;\n      }\n    }\n    return resultF;\n  }\n\n  onChangeStreet(event: any) {\n    let address = event.option.value;\n    var matches = address.match(/(\\d+)/);\n    let streetWithOutNumber = address.substring(0, matches.index).trim() + '+';\n    let addressSplitted = address.split(\" \");\n    streetWithOutNumber += addressSplitted[0]\n    let cleanStreet = streetWithOutNumber.substring(streetWithOutNumber.indexOf(' '), streetWithOutNumber.length)\n    address = matches[0] + ',' + cleanStreet + ',madrid,spain';\n\n    //replace *****with you api key\n    this.infoCardService.getAdressCoordinates(address).subscribe(\n      res => {\n\n         var myIcon = L.icon({\n           iconSize: [41, 51],\n           iconAnchor: [20, 51],\n           popupAnchor: [-3, -76],\n           shadowSize: [68, 95],\n\n           shadowAnchor: [22, 94]\n         });\n         myIcon.options.iconUrl = 'assets/leaflet/point.png';\n         //@ts-ignore\n         this.infoCardService.sendFoundAdressIconToMap(L.marker([res.results[0].locations[0].latLng.lat, res.results[0].locations[0].latLng.lng], {\n          icon: myIcon, clickable:\n            true, draggable: 'false'\n        }));\n      }, err => {\n        console.log(err)\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse  } from '@angular/common/http';\nimport { Observable, throwError,BehaviorSubject } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoCardService {\n\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/EMTServices/\";\n  //private REST_API_SERVER = \"https://localhost:8081/api/bikes/EMTServices/\";\n\n  private closetsStationsListOut = new BehaviorSubject<any[]>(null);\n  private iconOut = new BehaviorSubject<any[]>(null);\n  private zoomToOut = new BehaviorSubject<any[]>(null);\n\n  notifyClosestsStations$ = this.closetsStationsListOut.asObservable();\n  sendFoundAdressIconToMap$ = this.iconOut.asObservable();\n  zoomTo$ = this.zoomToOut.asObservable();\n\n  constructor(private httpClient: HttpClient) { }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  \n\n  getClosestsStations(params): Observable<any> {\n    return this.httpClient.post(this.REST_API_SERVER+'findClosestStations', params).pipe(catchError(this.handleError));\n  }\n\n  getAdressCoordinates(address: string){\n    return this.httpClient.get('https://www.mapquestapi.com/geocoding/v1/address?key=rap9nA00BZ9zIZLP1eWHyyyrRkqGdFVX&location=' + address).pipe(catchError(this.handleError));\n  }\n\n  notifyClosestStations(closetsStations: any) {\n    this.closetsStationsListOut.next(closetsStations);\n  }\n\n  sendFoundAdressIconToMap(icon: any) {\n    this.iconOut.next(icon);\n  }\n\n  zoomTo(userPosition: any) {\n    this.zoomToOut.next(userPosition);\n  }\n}\n","<div  class=\"container legend-container\">\n    <div class=\"row\">\n       <strong> <a class=\"element\">Bike station info</a></strong>\n    </div>\n    <div class=\"row\">\n       <div  id=\"elements\"><img src=\"assets/img/vehicle_color_1.png\" width=\"20\" height=\"20\" class=\"element\">\n          <span>Available {{bikesOrSlots}}</span>\n       </div>\n    </div>\n    <div class=\"row\">\n       <div  id=\"elements\"><img src=\"assets/img/vehicle_color_2.png\" width=\"20\" height=\"20\" class=\"element\">\n          <span> No Available {{bikesOrSlots}}</span>\n       </div>\n    </div>\n    <div class=\"row\">\n      <div id=\"toggle\" class=\"element\" >\n         <div >\n           Watch available {{bikesOrSlots}} <mat-slide-toggle class=\"example-margin\" [checked]=\"checked\" [disabled]=\"disabled\"\n             (change)=\"setBikeOrDot($event)\">\n           </mat-slide-toggle> \n         </div>\n       </div>\n      </div>\n    <div class=\"row\">\n       <strong> <a>Districts info</a></strong><br>\n    </div>\n    <div class=\"row\">\n       <div>\n          <img src=\"assets/leaflet/grey_dot.png\" width=\"20\" height=\"20\" class=\"element\">\n          <span>0 Bikes </span>\n       </div>\n    </div>\n    <div class=\"row\">\n       <img src=\"assets/leaflet/yellow_dot.png\" width=\"20\" height=\"20\" class=\"element\">\n       <span>Less than 50 bikes</span>\n    </div>\n    <div class=\"row\">\n       <img src=\"assets/leaflet/blue_dot.png\" width=\"20\" height=\"20\" class=\"element\">\n       <span>More than 50 bikes</span>\n    </div>\n    <!-- <div class=\"row\">\n    <div id=\"toggle\" class=\"element\" >\n       <div >\n         See bikes accidents heat map <mat-slide-toggle class=\"example-margin\" [checked]=\"checked\" [disabled]=\"disabled\"\n           (change)=\"toggleSlide($event)\">\n         </mat-slide-toggle> \n       </div>\n     </div>\n    </div> -->\n\n    \n </div>","import { Component, OnInit } from '@angular/core';\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\nimport { StyleService } from 'src/app/services/style.service';\n\n@Component({\n  selector: 'app-bikes-legend',\n  templateUrl: './bikes-legend.component.html',\n  styleUrls: ['./bikes-legend.component.css']\n})\nexport class BikesLegendComponent implements OnInit {\n\n  constructor(private styleService: StyleService, private bikesLayerService: BikesLayerService) { }\n\n  bikesOrSlots:string = 'bikes';\n  checked = false;\n  disabled = false;\n\n  ngOnInit(): void {\n  }\n\n  setBikeOrDot(bikeOrDot: string){\n    \n    //@ts-ignore\n    if(bikeOrDot.checked){\n      this.bikesOrSlots='slots';\n      this.bikesLayerService.createBikeStationsFeatures('slots')\n    }else{\n      this.bikesOrSlots='bikes';\n      this.bikesLayerService.createBikeStationsFeatures('bikes')\n    }\n  }\n\n  // toggleSlide(event){\n  //   if(event.checked){\n  //     this.globalService.showHeatMap();\n  //   }else{\n  //     this.globalService.hideHeatMap();\n  //   }\n  // }\n\n}\n","<div class=\"bus-stops-container\" class=\"bus-stop-container\">\n    <strong> <a class=\"element\">Bus stops in 500 meters</a></strong>\n    <div *ngFor=\"let busStop of busStops\" class=\"bus-stop\">\n        <p>{{busStop.name}}</p>\n        <div class=\"row\" style=\"padding: 10%;\" >\n            <div class=\"line-container\" *ngFor=\"let busLineBean of busStop.busLineBeanList\">{{busLineBean.line}}</div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BusesService } from 'src/app/services/buses.service';\n\n@Component({\n  selector: 'app-buses-legend',\n  templateUrl: './buses-legend.component.html',\n  styleUrls: ['./buses-legend.component.css']\n})\nexport class BusesLegendComponent implements OnInit {\n\n  busStops: any[];\n\n  constructor(private busesService: BusesService) {\n    this.busesService.notifyBuses$.subscribe(busStops => {\n      if (busStops != null) {\n         this.busStops = busStops;\n      }\n    });\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LegendComponent } from './legend/legend.component';\nimport {MaterialModule} from '../material-module';\nimport { BikesLegendComponent } from './bikes-legend/bikes-legend.component';\nimport { BusesLegendComponent } from './buses-legend/buses-legend.component'\nimport { AuthModuleModule } from '../auth-module/auth-module.module';\n\n\n@NgModule({\n  declarations: [LegendComponent, BikesLegendComponent, BusesLegendComponent],\n  imports: [\n    CommonModule, MaterialModule, AuthModuleModule\n  ],\n  exports:[\n    LegendComponent\n  ]\n})\nexport class LegendModule { }\n","<div *ngIf=\"showInLegend ==='legend'\">\r\n  <mat-tab-group class=\"container legend-container\">\r\n    <mat-tab label=\"BiciMad\"> <app-bikes-legend></app-bikes-legend> </mat-tab>\r\n    <mat-tab label=\"Buses\"> <app-buses-legend></app-buses-legend> </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n<div *ngIf=\"showInLegend ==='login'\">\r\n  <div class=\"container legend-container\">\r\n    <app-login></app-login>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showInLegend ==='register'\">\r\n  <div class=\"container legend-container\">\r\n    <app-register></app-register>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BikesLayerService } from 'src/app/services/bikes-layer.service';\r\nimport { StyleService } from 'src/app/services/style.service';\r\nimport { UpperBarService } from 'src/app/upper-bar/services/upper-bar.service';\r\n@Component({\r\n  selector: 'app-legend',\r\n  templateUrl: './legend.component.html',\r\n  styleUrls: ['./legend.component.css']\r\n})\r\nexport class LegendComponent implements OnInit {\r\n\r\n  showInLegend: string = 'legend';\r\n\r\n  constructor(private upperBarService: UpperBarService) { \r\n    this.upperBarService.uopenLogin$.subscribe(\r\n      data=>{\r\n        this.showInLegend= data;\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showInLegend = 'legend';\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button'\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n@NgModule({\r\n    exports:[\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSlideToggleModule,\r\n        MatExpansionModule,\r\n        MatTableModule,\r\n        MatDialogModule,\r\n        MatAutocompleteModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatProgressSpinnerModule\r\n    ]\r\n})\r\nexport class MaterialModule{}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, shareReplay } from 'rxjs/operators';\n\nimport Heatmap from 'ol/layer/Heatmap';\nimport { Vector as VectorSource } from 'ol/source';\nimport VectorLayer from 'ol/layer/Vector';\nimport Collection from 'ol/Collection';\nimport Feature from 'ol/Feature';\nimport WKT from 'ol/format/WKT';\nimport Point from 'ol/geom/Point';\nimport { MapService } from './map.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BikeAccidentService {\n\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/bikes/EMTServices/\";\n  //private REST_API_SERVER = \"http://localhost:8081/api/bikes/EMTServices/\";\n\n  private bikeAccidents: any;\n\n  bikeAccidentsCollection = new Collection;\n\n  format = new WKT();\n\n  constructor(private httpClient: HttpClient, private mapService: MapService) {\n    this.getBikeAccidents();\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  public getBikeAccidents(): Observable<any[]> {\n\n    this.httpClient.get(this.REST_API_SERVER + 'getBikeAccidents').subscribe(\n      res => {\n        this.createHeatMap(res)\n      }, err => {\n\n      }\n    )\n    return this.bikeAccidents;\n  }\n\n  createHeatMap(res) {\n\n    // res.forEach(bikeAccident => {\n\n    //   let bikeAccidentCoords = this.format.readFeature(bikeAccident.accidentPoint, { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates()\n\n\n    //   let bikeAccidentFeature = new Feature({\n    //     geometry: new Point(bikeAccidentCoords)\n    //   });\n    //   this.bikeAccidentsCollection.push(bikeAccidentFeature);\n    // });\n\n    // let bikeAccidentsLayer = new VectorLayer({\n    //   name: 'bikeAccidents',\n    //   source: new VectorSource({\n    //     features: this.bikeAccidentsCollection\n    //   })\n    // })\n    // let heatmap = new Heatmap({\n    //   source: bikeAccidentsLayer\n    // });\n\n    //this.mapService.map$.addLayer(heatmap);\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthModel } from '../models/authResponse.model';\r\n\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport Collection from 'ol/Collection';\r\n\r\nimport WKT from 'ol/format/WKT';\r\nimport { MapService } from './map.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError,BehaviorSubject } from 'rxjs';\r\nimport { StyleService } from './style.service';\r\nimport { AuthModuleModule } from '../auth-module/auth-module.module';\r\nimport { AuthService } from '../auth-module/services/auth.service';\r\nimport { TabledetailService } from '../components/tabledetail/services/tabledetail.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BikesLayerService {\r\n\r\n  bikeStations;\r\n\r\n  token: string;\r\n\r\n  private bikesOut = new BehaviorSubject<boolean>(null);\r\n\r\n  bikes$ = this.bikesOut.asObservable();\r\n\r\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/bikes/EMTServices/\";\r\n  //private REST_API_SERVER = \"http://localhost:8081/api/bikes/EMTServices/\";\r\n\r\n  biciMadAPIStatus;\r\n  accesToken;\r\n  response: any;\r\n  format = new WKT();\r\n  //bikeStations: any[] = new Array;\r\n  bikeStationsCollection = new Collection;\r\n  selectedBikeStationCollection = new Collection;\r\n  userPosition = { 'lat': null, 'lng': null };\r\n  stationId;\r\n\r\n  constructor(private httpClient: HttpClient, \r\n    private mapService : MapService,\r\n    private styleService: StyleService,\r\n    private authService: AuthService,\r\n    private tabledetailService:TabledetailService) {\r\n\r\n      this.mapService.sendUserPositionToInfoCard$.subscribe(data => {\r\n        if (data != null) {\r\n          if (typeof (data) === 'object') {\r\n            //@ts-ignore\r\n            this.userPosition.lat = data.lat;\r\n            //@ts-ignore\r\n            this.userPosition.lng = data.lng;\r\n            this.bikeStations= this.getBikeStations();\r\n          } else {\r\n            let fakeAddressSplt = String(data).split(' ');\r\n            //@ts-ignore\r\n            this.userPosition.lat = fakeAddressSplt[1];\r\n            //@ts-ignore\r\n            this.userPosition.lng = fakeAddressSplt[0];\r\n            this.bikeStations= this.getBikeStations();\r\n          }\r\n        }\r\n      })\r\n    \r\n      this.authService.emtToken$.subscribe(token=>{\r\n        if(token != null){\r\n          this.token = token;\r\n          this.bikeStations= this.getBikeStations();\r\n        }\r\n      })\r\n\r\n      this.tabledetailService.selectedStationId$.subscribe(stationId=>{\r\n        if(stationId != null){\r\n          this.stationId = stationId;\r\n          this.addSelected();\r\n        }\r\n      })\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  getClosestsStations(params): Observable<any> {\r\n    return this.httpClient.post(this.REST_API_SERVER+'findClosestStations', params).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  getBikeStations(){\r\n    if(this.token != undefined && this.userPosition.lng != undefined){\r\n      this.httpClient.get(this.REST_API_SERVER+'checkAvaibility',{\r\n        params: {\r\n          'emtToken': this.token,\r\n        }\r\n      }\r\n     // this.httpClient.get('http://localhost:8081/api/EMTServices/checkAvaibility',\r\n  //    params: {\r\n  //     'emtToken': this.token,\r\n  //   }\r\n  // }\r\n      ).subscribe(\r\n        res =>{\r\n          this.response = res;\r\n          this.createBikeStationsFeatures();\r\n        }\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  createBikeStationsFeatures(bikeOrSlot?: string){\r\n    this.bikeStationsCollection = new Collection;\r\n    this.response.forEach(bikeStation =>{\r\n\r\n      let splitCoords = bikeStation.pointsList.coordinates.split(' ');\r\n\r\n      let formatCoords= 'POINT('+splitCoords[0]+ ' '+ splitCoords[1]+\" 216.7\"+')';\r\n\r\n      let bikeStationCoords = this.format.readFeature(formatCoords.replace(\r\n        /[\\W]*\\S+[\\W]*$/, '') + ')', { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates();\r\n\r\n        let bikeStationFeature = new Feature({\r\n          geometry: new Point(bikeStationCoords)\r\n        });\r\n\r\n        bikeStationFeature.setId(bikeStation.stationId);\r\n\r\n        bikeStationFeature.setProperties({ 'availableBikes':bikeStation.availableBikes, 'availableSlots': bikeStation.freeDocks, 'stationId':bikeStation.stationId });\r\n  \r\n        if(bikeOrSlot === undefined){\r\n          this.styleService.applyStyleToMarker(bikeStationFeature,bikeStation);\r\n        }else{\r\n          this.styleService.applyStyleToMarker(bikeStationFeature,bikeStation, bikeOrSlot);\r\n        }\r\n        \r\n        this.bikeStationsCollection.push(bikeStationFeature);\r\n    })\r\n\r\n    let bikeStationsLayer = new VectorLayer({\r\n\t\t\tname: 'bikeStations',\r\n\t\t\tsource: new VectorSource({\r\n\t\t\t\tfeatures: this.bikeStationsCollection\r\n\t\t\t})\r\n    })\r\n\r\n\r\n  for(let i = 0; i < this.mapService.map$.getLayers().getArray().length;i++){\r\n    if(this.mapService.map$.getLayers().getArray()[i].getProperties().name === 'bikeStations'){\r\n      this.mapService.map$.removeLayer(this.mapService.map$.getLayers().getArray()[i]);\r\n    }\r\n  } \r\n    this.mapService.map$.addLayer(bikeStationsLayer);\r\n    \r\n    this.notifyBikes(true);\r\n  }\r\n\r\n  notifyBikes(bikesLoaded){\r\n    this.bikesOut.next(bikesLoaded)\r\n  }\r\n\r\n  addSelected(){\r\n    this.removeSelectedBikeStation();\r\n    for(let i = 0; i < this.mapService.map$.getLayers().getArray().length;i++){\r\n      \r\n      if(this.mapService.map$.getLayers().getArray()[i].getProperties().name === 'bikeStations'){\r\n        let selectedFeature = this.mapService.map$.getLayers().getArray()[i].getSource().getFeatureById(this.stationId);\r\n        let selectedFeatureCoords =  selectedFeature.getGeometry().getCoordinates();\r\n        let bikeStationFeature = new Feature({\r\n          geometry: new Point(selectedFeatureCoords)\r\n        });\r\n\r\n        bikeStationFeature.setId(this.stationId.stationId);\r\n\r\n        //bikeStationFeature.setProperties({ 'availableBikes':bikeStation.availableBikes, 'availableSlots': bikeStation.freeDocks, 'stationId':bikeStation.stationId });\r\n        this.styleService.applyStyleToSelectedFeature(bikeStationFeature);\r\n\r\n        this.selectedBikeStationCollection = new Collection;\r\n        this.selectedBikeStationCollection.push(bikeStationFeature);\r\n\r\n        let selectedbikeStationLayer = new VectorLayer({\r\n          name: 'selectedBikeStation',\r\n          source: new VectorSource({\r\n            features: this.selectedBikeStationCollection\r\n          })\r\n        })\r\n\r\n        this.mapService.map$.addLayer(selectedbikeStationLayer);\r\n        break;\r\n      }\r\n      \r\n    } \r\n  }\r\n\r\n  removeSelectedBikeStation(){\r\n    for(let i = 0; i < this.mapService.map$.getLayers().getArray().length;i++){\r\n      \r\n      if(this.mapService.map$.getLayers().getArray()[i].getProperties().name === 'selectedBikeStation'){\r\n        this.mapService.map$.removeLayer(this.mapService.map$.getLayers().getArray()[i]);\r\n      }}\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from '../auth-module/services/auth.service';\nimport { MapService } from './map.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusesService {\n\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/buses/EMTServices/\";\n  //private REST_API_SERVER = \"http://localhost:8081/api/buses/EMTServices/\";\n\n  token: string;\n\n  userPosition = { 'lat': null, 'lng': null };\n\n  private busesListOut = new BehaviorSubject<any[]>(null);\n  notifyBuses$ = this.busesListOut.asObservable();\n\n  constructor(private httpClient: HttpClient,private authService: AuthService, private mapService: MapService) {\n    //unavailable by now\n    //this.getBusStops();\n    this.authService.emtToken$.subscribe(token=>{\n      if(token != null){\n        this.token = token;\n        this.getBusStopsAroundUser();\n      }\n    });\n    this.mapService.sendUserPositionToInfoCard$.subscribe(data => {\n      if (data != null) {\n        if (typeof (data) === 'object') {\n          //@ts-ignore\n          this.userPosition.lat = data.lat;\n          //@ts-ignore\n          this.userPosition.lng = data.lng;\n          this.getBusStopsAroundUser();\n        } else {\n          let fakeAddressSplt = String(data).split(' ');\n          //@ts-ignore\n          this.userPosition.lat = fakeAddressSplt[1];\n          //@ts-ignore\n          this.userPosition.lng = fakeAddressSplt[0];\n          this.getBusStopsAroundUser();\n        }\n      }\n    })\n   }\n\n  getBusStops(){\n\n    //this.httpClient.get(this.REST_API_SERVER+'getBusStops').subscribe(\n    this.httpClient.get('http://localhost:8081/api/buses/EMTServices/getBusStops').subscribe(\n      res=>{\n        console.log(res)\n      }\n    )\n\n  }\n\n  getBusStopsAroundUser(){\n\n    if(this.token != undefined && this.userPosition.lng != undefined){\n      let lng = this.userPosition.lng;\n      let lat = this.userPosition.lat;\n  \n      this.httpClient.get(this.REST_API_SERVER+'getBusStopsAroundUser', {\n        params: {\n          'emtToken':this.token,\n          'lng': lng,\n          'lat': lat,\n        }\n      }).subscribe(\n        res=>{\n          this.notifyBuses(res);\n        },\n        err =>{\n        }\n      )\n    }\n  }\n\n  notifyBuses(busStops: any) {\n    this.busesListOut.next(busStops);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as olProj from 'ol/proj';\nimport Polygon from 'ol/geom/Polygon';\nimport MultiPolygon from 'ol/geom/MultiPolygon';\nimport Feature from 'ol/Feature';\nimport Collection from 'ol/Collection';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Style, Icon as IconStyle, Text, Fill, Stroke, Circle as CircleStyle } from 'ol/style';\n\nimport { MapService } from './map.service';\nimport { StyleService } from './style.service';\nimport { BikesLayerService } from './bikes-layer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistrictsService {\n\n  response: any;\n  districtsFeaturesCollection = new Collection;\n  alreadyDistricts: boolean = false;\n  \n  constructor(private httpClient: HttpClient, private mapService: MapService, private styleService: StyleService, private bikesService: BikesLayerService) {\n    \n    this.bikesService.bikes$.subscribe(bikes=>{\n      if(bikes && !this.alreadyDistricts){\n        this.getDistricts()\n        this.alreadyDistricts = true;\n      }\n      \n    })\n  }\n\n  getDistricts() {\n    this.httpClient.get('https://floating-reef-24535.herokuapp.com/api/urban/EMTServices/getDistricts').subscribe(\n     // this.httpClient.get('http://localhost:8081/api/urban/EMTServices/getDistricts').subscribe(\n      res => {\n        this.response = res;\n        this.createDistrictsFeatures()\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n  }\n\n  createDistrictsFeatures() {\n\n    let totalBikes = 0;\n    let districtsArrayCoords = new Array;\n    let districtsArrayInfo = new Array;\n\n    \n    for (let i = 0; i < this.response.length; i++) {\n      let pair = this.response[i].geom.substring(16, this.response[i].geom.length - 3).split(',')\n      let coordsDistrictArray = new Array;\n      let districtObj = {\n        'totalBikes':null,\n        'districtName':null\n      }\n    \n      for (let j = 0; j < pair.length; j++) {\n        let coordsPair = new Array;\n        pair[j].trim();\n        let split = pair[j].trim().split(' ')\n        let lat = split[0]\n        let lng = split[1]\n        coordsPair.push(parseFloat(lat));\n        coordsPair.push(parseFloat(lng));\n        coordsDistrictArray.push(coordsPair);\n      }\n      districtsArrayCoords.push(coordsDistrictArray)\n      districtObj.totalBikes = this.response[i].totalBikes;\n      districtObj.districtName = this.response[i].name;\n      districtsArrayInfo.push(districtObj)\n    }\n    for (let i = 0; i < districtsArrayCoords.length; i++) {\n      //for(let j = 0; j < districtsArrayCoords[i].length; j++){\n        let coorsTranform = districtsArrayCoords[i].map((coordinate) => {\n          return olProj.transform([coordinate[0], coordinate[1]], 'EPSG:4326', 'EPSG:3857');\n        });\n        let feature = new Feature({\n  \n          geometry: new Polygon([\n            coorsTranform\n          ])\n        });\n  \n        feature.setProperties({'totalBikes':districtsArrayInfo[i]})\n  \n         this.styleService.applyStyleToDistricts(feature);\n        // feature.setId(coordsArray[i].name);\n    \n        this.districtsFeaturesCollection.push(feature)\n     // }\n      \n    }\n\n    let districtsLayer = new VectorLayer({\n\t\t\tname: 'districts',\n\t\t\tsource: new VectorSource({\n\t\t\t\tfeatures: this.districtsFeaturesCollection\n\t\t\t})\n    })\n    this.mapService.map$.addLayer(districtsLayer);\n\n    let bikeStationsLayer;\n\n    //putting pins over districts layer\n    for(let i = 0; i < this.mapService.map$.getLayers().getArray().length;i++){\n      if(this.mapService.map$.getLayers().getArray()[i].getProperties().name === 'bikeStations'){\n        console.log(this.mapService.map$.getLayers().getArray()[i].getProperties().name )\n         bikeStationsLayer = this.mapService.map$.getLayers().getArray()[i];\n        this.mapService.map$.removeLayer(this.mapService.map$.getLayers().getArray()[i]);\n      }\n    } \n    this.mapService.map$.addLayer(bikeStationsLayer);\n  }\n\n  \n\n  applyStyleToDistrict(feature){\n\n    let plots_styles = [];\n\n    plots_styles.push(\n\n      new Style({\n        fill: new Fill({\n          color: [255, 255, 255, 0.5]\n        }),\n        text: new Text({\n\t\t\t\t\t \ttextAlign: 'center',\n\t\t\t\t\t \tfont: '9px',\n\t\t\t\t\t \ttextBaseline: 'top',\n\t\t\t\t\t \t// text: plotInfo.name,\n\t\t\t\t\t \tscale: 1.5,\n\t\t\t\t\t \toffsetX: 0,\n\t\t\t\t\t \toffsetY: 4,\n\t\t\t\t\t \t fill: new Fill({\n\t\t\t\t\t \t \tcolor: 'black'\n\t\t\t\t\t \t }),\n\t\t\t\t\t \t\n\t\t\t\t\t \tstroke: new Stroke({\n\t\t\t\t\t \t\twidth: 0\n\t\t\t\t\t \t})\n\t\t\t\t\t })\n      })\n    );\n\n    feature.setStyle(plots_styles);\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError,BehaviorSubject } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n//OpenLayers\r\nimport { Map } from 'ol';\r\nimport { defaults as defaultInteractions } from 'ol/interaction';\r\nimport WKT from 'ol/format/WKT';\r\n//import Icon from 'ol/style/Icon';\r\nimport Feature from 'ol/Feature';\r\nimport TileLayer from 'ol/layer/Tile.js';\r\nimport { BingMaps } from 'ol/source';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport { Vector as VectorLayer } from 'ol/layer';\r\nimport View from 'ol/View';\r\nimport { getCenter } from 'ol/extent';\r\n//import { TranslateService } from '@ngx-translate/core';\r\n//import * as moment from 'moment';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { stringify } from 'querystring';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n\r\n  map;\r\n  layers = [];\r\n  viewCoordinates: String = 'POINT(-3.703606430985161 40.41666320878426)';\r\n  view;\r\n  format = new WKT();\r\n\r\n  private userPositionOut = new BehaviorSubject<any[]>(null);\r\n  private deviceOut = new BehaviorSubject<boolean>(null);\r\n  sendUserPositionToInfoCard$ = this.userPositionOut.asObservable();\r\n  sendDevice$ = this.deviceOut.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  sendUserPositionToInfoCard(userPosition: any) {\r\n    this.userPositionOut.next(userPosition);\r\n  }\r\n\r\n  sendDevice(device: boolean){\r\n    this.deviceOut.next(device);\r\n  }\r\n\r\n  get map$() {\r\n    return this.map;\r\n  }\r\n\r\n  renderMap() {\r\n    this.layers = [\r\n      new TileLayer({\r\n        name: 'base',\r\n        source: new BingMaps({\r\n          key: 'AlqHetBTtIFed0g61VUmEq079AmyyXfR9FPcqzBt13dvYZsuowl7ZTMFtWJik0LL',\r\n          imagerySet: ['AerialWithLabelsOnDemand']\r\n        })\r\n      })\r\n    ];\r\n\r\n    this.view = new View({\r\n      center: this.format.readFeature(this.viewCoordinates, { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates(),\r\n      zoom: 17,\r\n      maxZoom: 20,\r\n    });\r\n\r\n    let interactions = defaultInteractions({ altShiftDragRotate: false, pinchRotate: false });\r\n\r\n    this.map = new Map({\r\n      layers: this.layers,\r\n      target: document.getElementById('map'),\r\n      controls: [],\r\n      view: this.view,\r\n      interactions: interactions\r\n\r\n    });\r\n  }\r\n\r\n  updateMapViewCenter(viewCoordinates){\r\n    this.viewCoordinates = new String;\r\n    \r\n    this.viewCoordinates = viewCoordinates;\r\n    this.view = new View({\r\n      center: this.format.readFeature(this.viewCoordinates, { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates(),\r\n      zoom: 17,\r\n      maxZoom: 20,\r\n    });\r\n    \r\n    this.map.setView(this.view)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRoute(selectedBikeStationAddress: string){\n    let userPosition = localStorage.getItem('userLocationAddress');\n    // console.log(userPosition)\n    // console.log(selectedBikeStationAddress)\n    // http://www.mapquestapi.com/directions/v2/route?key=rap9nA00BZ9zIZLP1eWHyyyrRkqGdFVX&from=Clarendon Blvd,Arlington,VA&to=2400+S+Glebe+Rd,+Arlington,+VA\n    // this.httpClient.get('http://open.mapquestapi.com/directions/v2/route?key=KEY&from=Clarendon Blvd,Arlington,VA&to=2400+S+Glebe+Rd,+Arlington,+VA').subscribe(\n    //    data=>{\n    //      console.log(data)\n    //    },\n    //    err => {\n    //      console.log(err)\n    //    }\n    //  )\n\n\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StreetsService {\n\n  private streets;\n\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/urban/EMTServices/\";\n  //private REST_API_SERVER = \"http://localhost:8081/api/urban/EMTServices/\";\n\n  private streetsListOut = new BehaviorSubject<any[]>(null);\n\n  streetsList$ = this.streetsListOut.asObservable();\n\n  constructor(private httpClient: HttpClient) {\n    this.getStreets().subscribe(data =>{\n      this.notifyStreets(data)\n    })\n   }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    console.log(errorMessage)\n    return throwError(errorMessage);\n  }\n\n  getStreets(): Observable<any>{\n   //this. streets=  this.httpClient.get('http://localhost:8081/api/EMTServices/getStreets').pipe(catchError(this.handleError));\n    return this.streets = this.httpClient.get(this.REST_API_SERVER+'getStreets').pipe(catchError(this.handleError));\n  }\n\n  notifyStreets(streets){\n    this.streetsListOut.next(streets);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Style, Icon as IconStyle, Text, Fill, Stroke, Circle as CircleStyle } from 'ol/style';\nimport { MapService } from './map.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StyleService {\n\n  assets_base = 'assets/img/';\n\n  constructor(private mapService: MapService) { }\n\n  changeBikeMarkerStyle(bikeOrSlot){\n    \n    let markerStyle = [];\n\n   let less2Slots = new Style({\n      image: new IconStyle(({\n        anchor: [21, 70],\n        anchorXUnits: 'pixels',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: this.assets_base + 'less.png',\n        snapToPixel: false\n      })),\n      //Vehicle Label\n      text: new Text({\n        // text:\n        textAlign: 'center',\n        font: '11px Arial',\n        textBaseline: 'top',\n        fill: new Fill({ color: 'lightCyan' }),\n        stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n        offsetX: 0,\n        offsetY: 4,\n      })\n    })\n\n    let slotSymbol = new Style({\n      image: new IconStyle(({\n        anchor: [16, 70],\n        anchorXUnits: 'pixels',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: this.assets_base + 'iconmonstr-car-21-32.png',\n        snapToPixel: false\n      }))\n    })\n\n    let more2Slots = new Style({\n      image: new IconStyle(({\n        anchor: [21, 70],\n        anchorXUnits: 'pixels',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: this.assets_base + 'vehicle_color_1.png',\n        snapToPixel: false\n      })),\n      //Vehicle Label\n      text: new Text({\n        // text:\n        textAlign: 'center',\n        font: '11px Arial',\n        textBaseline: 'top',\n        fill: new Fill({ color: 'lightCyan' }),\n        stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n        offsetX: 0,\n        offsetY: 4,\n      })\n    })\n\n    let less2Bikes = new Style({\n      image: new IconStyle(({\n        anchor: [21, 70],\n        anchorXUnits: 'pixels',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: this.assets_base + 'less.png',\n        snapToPixel: false\n      })),\n      //Vehicle Label\n      text: new Text({\n        // text:\n        textAlign: 'center',\n        font: '11px Arial',\n        textBaseline: 'top',\n        fill: new Fill({ color: 'lightCyan' }),\n        stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n        offsetX: 0,\n        offsetY: 4,\n      })\n    })\n\n    let more2Bikes = new Style({\n      image: new IconStyle(({\n        anchor: [21, 70],\n        anchorXUnits: 'pixels',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: this.assets_base + 'vehicle_color_1.png',\n        snapToPixel: false\n      })),\n      //Vehicle Label\n      text: new Text({\n        // text:\n        textAlign: 'center',\n        font: '11px Arial',\n        textBaseline: 'top',\n        fill: new Fill({ color: 'lightCyan' }),\n        stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n        offsetX: 0,\n        offsetY: 4,\n      })\n    })\n\n      markerStyle.push(\n        new Style({\n        image: new IconStyle({\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction',\n          opacity: 1,\n          src: this.assets_base + 'vehicle_pin.png',\n          snapToPixel: false\n        }),\n        //Text Style\n        text: new Text({\n          textAlign: 'center',\n          font: '9px',\n          textBaseline: 'top',\n          //text: vehicleInfo.name,\n          scale: 1.5,\n          offsetX: 0,\n          offsetY: 4,\n          // fill: new Fill({\n          //   color: textoVehiculo_color\n          // })\n          // ,\n          stroke: new Stroke({\n            width: 0\n          })\n        })\n      })\n      );\n\n    let layers = this.mapService.map$.getLayers();\n    let feature = layers.getArray()[1].getSource().getFeatures();\n    for(let i = 0; i < feature.length; i++){\n      if(bikeOrSlot === 'slot'){\n        \n        if(feature[i].values_.availableSlots <= 2){\n          markerStyle.push(less2Slots)\n          markerStyle.push(slotSymbol)\n        }else{\n          markerStyle.push(more2Slots)\n          markerStyle.push(slotSymbol)\n        }\n      }else{\n        if(feature[i].values_.availableBikes <= 2){\n          markerStyle.push(less2Bikes)\n        }else{\n          markerStyle.push(more2Bikes)\n        }\n      }\n      \n      feature[i].setStyle(markerStyle);\n    }\n  }\n\n  applyStyleToMarker(bikeStationFeature,bikeStation, bikeOrSlot?){\n\n    let markerStyle = [];\n      markerStyle.push(\n        new Style({\n        image: new IconStyle({\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction',\n          opacity: 1,\n          src: this.assets_base + 'vehicle_pin.png',\n          snapToPixel: false\n        }),\n        //Text Style\n        text: new Text({\n          textAlign: 'center',\n          font: '9px',\n          textBaseline: 'top',\n          //text: vehicleInfo.name,\n          scale: 1.5,\n          offsetX: 0,\n          offsetY: 4,\n          // fill: new Fill({\n          //   color: textoVehiculo_color\n          // })\n          // ,\n          stroke: new Stroke({\n            width: 0\n          })\n        })\n      })\n      );\n\n\n      if(bikeOrSlot === undefined || bikeOrSlot === 'bikes'){\n        if(bikeStation.availableBikes > 5){\n          markerStyle.push(\n            new Style({\n              image: new IconStyle(({\n                anchor: [21, 70],\n                anchorXUnits: 'pixels',\n                anchorYUnits: 'pixels',\n                opacity: 1,\n                src: this.assets_base + 'vehicle_color_1.png',\n                snapToPixel: false\n              })),\n              //Vehicle Label\n              text: new Text({\n                // text:\n                textAlign: 'center',\n                font: '11px Arial',\n                textBaseline: 'top',\n                fill: new Fill({ color: 'lightCyan' }),\n                stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n                offsetX: 0,\n                offsetY: 4,\n              })\n            }),\n            new Style({\n              image: new IconStyle(({\n                anchor: [16, 70],\n                anchorXUnits: 'pixels',\n                anchorYUnits: 'pixels',\n                opacity: 1,\n                src: this.assets_base + 'iconmonstr-bicycle-1-32.png',\n                snapToPixel: false\n              }))\n            })\n          )\n        }else{\n          markerStyle.push(\n            new Style({\n              image: new IconStyle(({\n                anchor: [21, 70],\n                anchorXUnits: 'pixels',\n                anchorYUnits: 'pixels',\n                opacity: 1,\n                src: this.assets_base + 'vehicle_color_2.png',\n                snapToPixel: false\n              })),\n              //Vehicle Label\n              text: new Text({\n                // text:\n                textAlign: 'center',\n                font: '11px Arial',\n                textBaseline: 'top',\n                fill: new Fill({ color: 'lightCyan' }),\n                stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n                offsetX: 0,\n                offsetY: 4,\n              })\n            }),\n              new Style({\n                image: new IconStyle(({\n                  anchor: [16, 70],\n                  anchorXUnits: 'pixels',\n                  anchorYUnits: 'pixels',\n                  opacity: 1,\n                  src: this.assets_base + 'iconmonstr-bicycle-1-32.png',\n                  snapToPixel: false\n                }))\n              })\n            \n          )\n        }\n      }else{\n\n        let less2Slots = new Style({\n          image: new IconStyle(({\n            anchor: [21, 70],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: this.assets_base + 'less.png',\n            snapToPixel: false\n          })),\n          //Vehicle Label\n          text: new Text({\n            // text:\n            textAlign: 'center',\n            font: '11px Arial',\n            textBaseline: 'top',\n            fill: new Fill({ color: 'lightCyan' }),\n            stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n            offsetX: 0,\n            offsetY: 4,\n          })\n        })\n    \n        let slotSymbol = new Style({\n          image: new IconStyle(({\n            anchor: [16, 65],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: this.assets_base + 'iconmonstr-car-21-32.png',\n            snapToPixel: false\n          }))\n        })\n    \n        let more2Slots = new Style({\n          image: new IconStyle(({\n            anchor: [21, 70],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: this.assets_base + 'vehicle_color_1.png',\n            snapToPixel: false\n          })),\n          //Vehicle Label\n          text: new Text({\n            // text:\n            textAlign: 'center',\n            font: '11px Arial',\n            textBaseline: 'top',\n            fill: new Fill({ color: 'lightCyan' }),\n            stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n            offsetX: 0,\n            offsetY: 4,\n          })\n        })\n        if(bikeStation.availableSlots <= 1){\n          markerStyle.push(less2Slots)\n          markerStyle.push(slotSymbol)\n        }else{\n          markerStyle.push(more2Slots)\n          markerStyle.push(slotSymbol)\n        }\n        \n\n        markerStyle.push()\n      }\n      \n      bikeStationFeature.setStyle(markerStyle);\n    }\n\n     applyStyleToFoundAdressMarker(foundAddressFeature){\n       let markerStyle = [];\n       markerStyle.push(\n         new Style({\n         image: new IconStyle({\n           anchor: [0.5, 1],\n           anchorXUnits: 'fraction',\n           anchorYUnits: 'fraction',\n           opacity: 1,\n           src: this.assets_base + 'vehicle_pin.png',\n           snapToPixel: false\n         }),\n         //Text Style\n         text: new Text({\n           textAlign: 'center',\n           font: '9px',\n           textBaseline: 'top',\n           //text: vehicleInfo.name,\n           scale: 1.5,\n           offsetX: 0,\n           offsetY: 4,\n    //       // fill: new Fill({\n    //       //   color: textoVehiculo_color\n    //       // })\n    //       // ,\n           stroke: new Stroke({\n             width: 0\n           })\n         })\n       })\n       );\n  \n         markerStyle.push(\n           new Style({\n             image: new IconStyle(({\n               anchor: [21, 70],\n               anchorXUnits: 'pixels',\n               anchorYUnits: 'pixels',\n               opacity: 1,\n               src: this.assets_base + 'vehicle_color_7.png',\n               snapToPixel: false\n             })),\n    //         //Vehicle Label\n             text: new Text({\n               // text:\n               textAlign: 'center',\n               font: '11px Arial',\n               textBaseline: 'top',\n               fill: new Fill({ color: 'lightCyan' }),\n               stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n               offsetX: 0,\n               offsetY: 4,\n             })\n           }),\n         )\n      \n       foundAddressFeature.setStyle(markerStyle);\n     }\n\n    applyStyleToDistricts(feature){\n      let plots_styles = [];\n\n      let totalBikes = feature.getProperties().totalBikes;\n      let districtName = totalBikes.districtName;\n\n      let noBikes = new Style({\n        fill: new Fill({\n          color: [131, 145, 146, 0.5]\n        }),\n        stroke:new Stroke({ \n          color: 'black',\n          width: 1,\n          zIndex: 1\n        }),\n        text: new Text({\n             textAlign: 'center',\n             font: '9px',\n             textBaseline: 'top',\n              text: districtName,\n             scale: 1.5,\n             offsetX: 0,\n             offsetY: 4,\n              fill: new Fill({\n                color: 'black'\n              }),\n             \n             stroke: new Stroke({\n               width: 2\n             })\n           })\n      })\n\n      let lessThan50Bikes = new Style({\n        fill: new Fill({\n          color: [247, 220, 111, 0.5]\n        }),\n        stroke:new Stroke({ \n          color: 'black',\n          width: 1,\n          zIndex: 1\n        }),\n        text: new Text({\n             textAlign: 'center',\n             font: '9px',\n             textBaseline: 'top',\n             text: districtName,\n             scale: 1.5,\n             offsetX: 0,\n             offsetY: 4,\n              fill: new Fill({\n                color: 'black'\n              }),\n             \n             stroke: new Stroke({\n               width: 2,\n               color: 'black'\n             })\n           })\n      })\n\n      let moreThan50Bikes = new Style({\n        fill: new Fill({\n          color: [36, 113, 163, 0.5]\n        }),\n        stroke:new Stroke({ \n          color: 'black',\n          width: 1,\n          zIndex: 1\n        }),\n        text: new Text({\n             textAlign: 'center',\n             font: '9px',\n             textBaseline: 'top',\n             text: districtName,\n             scale: 1.5,\n             offsetX: 0,\n             offsetY: 4,\n              fill: new Fill({\n                color: 'black'\n              }),\n             \n             stroke: new Stroke({\n               width: 2\n             })\n           })\n      })\n\n       if(totalBikes.totalBikes <1){\n         plots_styles.push(\n  \n           noBikes\n           );\n       }else if(totalBikes.totalBikes <50 && totalBikes.totalBikes > 0){\n         plots_styles.push(\n  \n           lessThan50Bikes\n           );\n       }else{\n        \n         plots_styles.push(\n  \n           moreThan50Bikes\n           );\n       }\n      \n     \n      feature.setStyle(plots_styles);\n    }\n\n    applyStyleToUser(userPositionFeature){\n      let markerStyle = [];\n      markerStyle.push(\n        new Style({\n          image: new IconStyle({\n            anchor: [0.5, 1],\n            anchorXUnits: 'fraction',\n            anchorYUnits: 'fraction',\n            opacity: 1,\n            src: this.assets_base + 'vehicle_pin.png',\n            snapToPixel: false\n          }),\n          //Text Style\n          text: new Text({\n            textAlign: 'center',\n            font: '9px',\n            textBaseline: 'top',\n            //text: vehicleInfo.name,\n            scale: 1.5,\n            offsetX: 0,\n            offsetY: 4,\n            // fill: new Fill({\n            //   color: textoVehiculo_color\n            // })\n            // ,\n            stroke: new Stroke({\n              width: 0\n            })\n          })\n        }),\n        new Style({\n          image: new IconStyle(({\n            anchor: [16, 70],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: 'assets/img/iconmonstr-user-6-32.png',\n            snapToPixel: false\n          }))\n        })\n      );\n\n      userPositionFeature.setStyle(markerStyle);\n    }\n\n    applyStyleToSelectedFeature(feature){\n      let markerStyleSelectedFeature = [];\n      markerStyleSelectedFeature.push(\n        new Style({\n          image: new IconStyle({\n            anchor: [0.5, 1],\n            anchorXUnits: 'fraction',\n            anchorYUnits: 'fraction',\n            opacity: 1,\n            src: this.assets_base + 'vehicle_pin.png',\n            snapToPixel: false\n          }),\n          //Text Style\n          text: new Text({\n            textAlign: 'center',\n            font: '9px',\n            textBaseline: 'top',\n            //text: vehicleInfo.name,\n            scale: 1.5,\n            offsetX: 0,\n            offsetY: 4,\n            // fill: new Fill({\n            //   color: textoVehiculo_color\n            // })\n            // ,\n            stroke: new Stroke({\n              width: 0\n            })\n          })\n        }),\n        new Style({\n          image: new IconStyle(({\n            anchor: [21, 70],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: this.assets_base + 'vehicle_color_3.png',\n            snapToPixel: false\n          })),\n          //Vehicle Label\n          text: new Text({\n            // text:\n            textAlign: 'center',\n            font: '11px Arial',\n            textBaseline: 'top',\n            fill: new Fill({ color: 'lightCyan' }),\n            stroke: new Stroke({ color: 'MediumBlue', width: 1 }),\n            offsetX: 0,\n            offsetY: 4,\n          })\n        }),\n        new Style({\n          image: new IconStyle(({\n            anchor: [16, 70],\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            opacity: 1,\n            src: this.assets_base + 'iconmonstr-bicycle-1-32.png',\n            snapToPixel: false\n          }))\n        })\n      );\n\n      feature.setStyle(markerStyleSelectedFeature);\n    }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MapService } from './map.service';\r\n\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport Collection from 'ol/Collection';\r\nimport { Style, Icon as IconStyle, Text, Fill, Stroke, Circle as CircleStyle } from 'ol/style';\r\nimport WKT from 'ol/format/WKT';\r\nimport { InfoCardService } from '../info-card/services/info-card.service';\r\n\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { stringify } from 'querystring';\r\nimport { TabledetailComponent } from '../components/tabledetail/tabledetail.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NomadriddialogComponent } from '../components/nomadriddialog/nomadriddialog.component';\r\nimport { StyleService } from './style.service';\r\nimport { ErrordialogComponent } from '../components/errordialog/errordialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  userCity: string;\r\n  format = new WKT();\r\n  assets_base = 'assets/img/';\r\n\r\n  private userPositionOut = new BehaviorSubject<any[]>(null);\r\n\r\n  userPosition$ = this.userPositionOut.asObservable();\r\n\r\n  //private REST_API_SERVER = \"http://localhost:8081/api/auth/EMTServices/\";\r\n  private REST_API_SERVER = \"https://floating-reef-24535.herokuapp.com/api/auth/EMTServices/\";\r\n\r\n  constructor(private httpClient: HttpClient, private mapService: MapService,\r\n    private infoCardService: InfoCardService, public dialog: MatDialog, private styleService: StyleService) {\r\n    this.getUserPosition();\r\n  }\r\n\r\n  notifyUserPosition(userPosition) {\r\n    this.userPositionOut.next(userPosition)\r\n  }\r\n\r\n  getUserPosition() {\r\n    let http = this.httpClient;\r\n    let userCity = this.userCity;\r\n    let mapService = this.mapService;\r\n    let format = this.format;\r\n    let assets_base = this.assets_base;\r\n    let notifyUserPosition = this.notifyUserPosition;\r\n    let dialog = this.dialog;\r\n    let styleService = this.styleService;\r\n    let REST_API_SERVER = this.REST_API_SERVER;\r\n\r\n    navigator.geolocation.getCurrentPosition(function (location) {\r\n      var lat = location.coords.latitude;\r\n      var lng = location.coords.longitude;\r\n\r\n\r\n      let locationObj = {\r\n        'lat:': lat,\r\n        'lng': lng\r\n      }\r\n      http.get('https://www.mapquestapi.com/geocoding/v1/reverse?key=rap9nA00BZ9zIZLP1eWHyyyrRkqGdFVX&location=' + location.coords.latitude + ',' + location.coords.longitude).subscribe(\r\n        res => {\r\n          let markerStyle = [];\r\n          //@ts-ignore\r\n          localStorage.setItem('userLocationAddress', res.results[0].locations[0].street)\r\n\r\n          //@ts-ignore\r\n          userCity=res.results[0].locations[0].adminArea5;\r\n\r\n          http.get(REST_API_SERVER+'registerVisit',{\r\n            params: {\r\n              'userCity': userCity,\r\n            }\r\n          }\r\n          ).subscribe(\r\n            res =>{\r\n            },\r\n            err=>{\r\n              \r\n            }\r\n          )\r\n\r\n          //@ts-ignore\r\n          if (res.results[0].locations[0].adminArea5 === 'Madrid') {\r\n            //@ts-ignore\r\n            let formatCoords = 'POINT(' + res.results[0].providedLocation.latLng.lng + ' ' + res.results[0].providedLocation.latLng.lat + \" 216.7\" + ')';\r\n            //@ts-ignore\r\n            let formatCoords2 = 'POINT(' + res.results[0].providedLocation.latLng.lng + ' ' + res.results[0].providedLocation.latLng.lat + ')';\r\n\r\n            mapService.updateMapViewCenter(formatCoords2);\r\n\r\n            let userPositionCoords = format.readFeature(formatCoords.replace(\r\n              /[\\W]*\\S+[\\W]*$/, '') + ')', { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' }).getGeometry().getCoordinates();\r\n\r\n            let userPositionFeature = new Feature({\r\n              geometry: new Point(userPositionCoords)\r\n            });\r\n\r\n            //@ts-ignore\r\n            mapService.sendUserPositionToInfoCard(res.results[0].providedLocation.latLng);\r\n\r\n            styleService.applyStyleToUser(userPositionFeature);\r\n\r\n            let userPositionCollection = new Collection;\r\n\r\n            userPositionCollection.push(userPositionFeature);\r\n\r\n            let userPositionLayer = new VectorLayer({\r\n              name: 'userPosition',\r\n              source: new VectorSource({\r\n                features: userPositionCollection\r\n              })\r\n            });\r\n\r\n            mapService.map$.addLayer(userPositionLayer);\r\n            //@ts-ignore\r\n            userCity = res.results[0].locations[0].adminArea5;\r\n          } else {\r\n            const dialogRef = dialog.open(NomadriddialogComponent, {\r\n              width: '600px',\r\n            });\r\n\r\n            dialogRef.afterClosed().subscribe(result => {\r\n              console.log(result)\r\n            });\r\n\r\n          }\r\n\r\n        }, err =>{\r\n          const dialogRef = dialog.open(ErrordialogComponent, {\r\n            width: '600px',\r\n            data: {err:err}\r\n          });\r\n        }\r\n      )\r\n\r\n      return locationObj;\r\n    });\r\n  }\r\n\r\n  registerUserCity() {\r\n        \r\n      \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpperBarService {\n\n  private openLoginOut = new BehaviorSubject<string>(null);\n\n  uopenLogin$ = this.openLoginOut.asObservable();\n\n  constructor() { }\n\n  openLogin(openLogin: string){\n    this.openLoginOut.next(openLogin);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UpperBarComponent } from './upper-bar/upper-bar.component';\nimport { MaterialModule } from '../material-module';\nimport { AuthModuleModule } from '../auth-module/auth-module.module';\n\n\n\n@NgModule({\n  declarations: [UpperBarComponent],\n  imports: [\n    CommonModule,MaterialModule, AuthModuleModule\n  ],\n  exports:[\n    UpperBarComponent\n  ]\n})\nexport class UpperBarModule { }\n","<mat-toolbar>\n    <div >\n        <div style=\"padding: 2%;\">\n            MadridMobility\n            <!-- <a role=\"button\" (click)=\"openLogin()\">login</a> -->\n        </div>\n        \n    </div>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { UpperBarService } from '../services/upper-bar.service';\n\n@Component({\n  selector: 'app-upper-bar',\n  templateUrl: './upper-bar.component.html',\n  styleUrls: ['./upper-bar.component.css']\n})\nexport class UpperBarComponent implements OnInit {\n\n  constructor(private upperBarService: UpperBarService) { }\n\n  ngOnInit(): void {\n  }\n\n  openLogin() {\n    this.upperBarService.openLogin('login');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}